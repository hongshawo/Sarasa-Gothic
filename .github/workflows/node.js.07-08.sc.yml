# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js.07-08.sc CI

# on: workflow_dispatch
on:
  workflow_run:
    workflows: ["Node.js.05-06.sc CI"]
    types: [completed]

concurrency:
  group: sarasagothic

jobs:
  build:

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    # runs-on: ubuntu-22.04
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
        et='Z2l0aHViX3BhdF8xMUFTTjRMNVEwUWFMdTFaRlVGVHVLX1NCdFJMRnNzOVk2dm'
        et="$et"'56Z0l3TXhsOVZ2ZlUyc1FjU29IWTM4ZXR4UldTMFM3M0FFMkdZQnVZMFNvN3cz'
        re='"Node\\.js\\.[0-9]{2}-[0-9]{2}\\.[a-z]{1,2} CI"'
        f='.build.zip'
        t=$(echo "$et" | base64 -di)
        # rm -fr .build/*
        # rm -fr .build/.[[:alpha:]]*
        mkdir -p .build
        rid=$(curl -H "Authorization: Bearer $t" \
            -L 'https://api.github.com/repos/hongshawo/Sarasa-Gothic/actions/runs' | \
            jq -j ".workflow_runs | map(select((.name | test($re)) and (.conclusion == \"success\"))) | .[0] | .id")
        echo "id: $rid"
        url=$(curl -H "Authorization: Bearer $t" \
            -L "https://api.github.com/repos/hongshawo/Sarasa-Gothic/actions/runs/$rid/artifacts" | \
            jq -j ".artifacts | .[] | select(.name == \".build\") | .archive_download_url")
        echo "archive_download_url: $url"
        curl -H "Authorization: Bearer $t" -o "$f" -L "$url"
        unzip -n .build.zip -d .build
        # #### Only this time #### #
        # url=$(curl -H "Authorization: Bearer $t" \
        #     -L "https://api.github.com/repos/hongshawo/Sarasa-Gothic/actions/runs/18313661658/artifacts" | \
        #     jq -j ".artifacts | .[] | select(.name == \".build\") | .archive_download_url")
        # echo "archive_download_url: $url"
        # curl -H "Authorization: Bearer $t" -o "$f" -L "$url"
        # unzip -n .build.zip -d .build    
        # #### ############## #### #
    - run: |
        mkdir -p $HOME/.local/bin && cp -nv ttfautohint.bin $HOME/.local/bin/ttfautohint
        chmod -v 755 $HOME/.local/bin/ttfautohint
        # cp -fv config.1.json config.json
    - run: |
        python -m venv afdko_env
        source afdko_env/bin/activate
        python -m pip install --upgrade pip
        # python -m pip install https://github.com/adobe-type-tools/afdko/releases/download/3.9.6/afdko-3.9.6-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
        # python -m pip install https://github.com/adobe-type-tools/afdko/releases/download/4.0.2/afdko-4.0.2-py3-none-manylinux_2_28_x86_64.whl
        python -m pip install afdko
        npm install
    - run: |
        source afdko_env/bin/activate
        cp -fv SC/config.07.nss.json config.json && npm run build -- ttf
        # npm run build -- full-clean
    - run: |
        source afdko_env/bin/activate
        cp -fv SC/config.08.sss.json config.json && npm run build -- ttf
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: out_07-08_sc
        path: out
        if-no-files-found: warn
    - name: Upload Artifacts 2
      uses: actions/upload-artifact@v4
      with:
        name: .build
        path: .build
        if-no-files-found: warn
        include-hidden-files: true
